The Network Diagnostic Tool (NDT) client/server program consists of
several components.  It also relies on 2 external system libraries
and the Web100 Kernel Instrumentation Kit (KIS).  This document describes
the steps you need to take to install and use this tool.

1. Download and install the Web100 Kernel patch file from
http://www.web100.org.  There are specific kernel patches for each
web100 supported Linux kernel.  All versions of the web100 kernel
patch for Linux 2.4 have been tests.  Follow the Web100
installation instructions to build and install this new kernel.

2. Download and install the Web100 Userland library file from
http://www.web100.org.  You should be able to use any version
of the userland library for this tool. Follow the Web100 instructions
to build and install this library.

3. Add "/usr/local/lib" to the /etc/ld.so.conf file and rebuild the
dynamic linker run-time bindings.  This NDT tools uses the Web100
userland library installed in the previous step.  The default installation
puts this library in the /usr/local/lib director.  You must make this
location known to the dynamic linker.  The following commands will
perform this function

	# echo /usr/local/lib >> /etc/ld.so.conf
	#/sbin/ldconfig

	An alternate solution is to create/modify the users
	LD_LIBRARY_PATH environment variable to include the
	/usr/local/lib directory

4. Obtain and install the libpcap.so libraries.  The NDT server
program performs packet level timings to determine what the path's
bottleneck link is.  This function uses the packet capture facilities
found in the libpcap library.  These library routines may be obtained
from the http://www.tcpdump.org/ web site or .rpm files may be downloaded
from your favorite Linux mirror site.

5. Download and install the Java Software Development kit from Sun
Microsystems (http://java.sun.com/j2se/index.jsp).  At the present
time sdk version 1.2.2, 1.3.1_09, and 1.4.2 have successfully been 
used.  Once this SDK package is installed, add the java bin directory
to your path.  For example if the 1.4.2 SDK package was installed into the 
/usr/local/pkg directory then add the string ":/usr/local/pkg/j2sdk_nb//j2sdk1.4.2/bin"
to your path variable (contact your sysadmin for help if you are
unfamiliar with changing your path variable.).

6. Unpack the NDT tarball (ndt-x.y.z.tar.gz) you downloaded. 
This will create the ndt-x.y.z directory and all the NDT files listed
in the FILES file.  

As of April 2004, the NDT distribution has been converted to the GNU
automake system.  This means that pre-built program are no longer
available.  Instead the following steps will create the executable
programs and install everything you need to start the tools.

	a. cd to the ndt-x.y.z directory (for example %cd ndt-3.0.9)
	b. run the "./configure" command 
	c. run the "make" command
	d. run the "make install" command
	e. run the "./create-html.sh" command

By default, the files are installed in the /usr/local/sbin, /usr/local/bin,
and /usr/local/ndt directories.  The base directory can be changed by
providing the prefix option to the configure command.  The create-html.sh
command automates the process of tailoring the tcpbw100.html file, making 
it easier to setup a new server.

6. Edit the "start.ndt" script and change the base directory line to
reflect where you have placed the NDT programs.  Note: by default the log
file is written back to the base directory and the web100_variables file
is read from this directory.  Both of these parameters can be overwritten
by command line options to the web100srv program.

Once the start.ndt script is configured, you can start the NDT service by
running this script.  This will automatically start the fakewww and web100srv
processes.  If you prefer, you can manually start this processes by following
the actions in steps 7 and 8.  Note, that both processes write messages to
stdout and stderr, so a redirect of output messages may be called for.


7. Optional: start the fakewww program to handle incoming test requests. 
This utility is provided to allow you to run a server without the need for
a full blown web server.  By default this fakewww program listening for
incoming connections on port 7123.  A command line option may be used
to change the port number.  The fakewww utility does not need root authority
if the port number is greater than 1023.  You may also use a full function
web server and skip this step.  (Note, if you use a full function web server
you will not be able to run the NDT service in Federated mode.)

8. Start the web100 server program.  This program uses the libpcap
library to perform packet level connection statistics.  This requires
that the web100srv program run as root.  (Note: this is a change from NDT
versions released before 3/14/03.)  The web100srv program has several
options, run "web100srv -h"  for a complete list.  Also note: that this
process uses port 3001, 3002, and 3003 to communicate with the Java applet
on the client's desktop.  You may need to configure your local network
infrastructure to allow traffic on these 3 ports.

The NDT is now setup and ready to operate.  To test, point your web browser
to your server and press the 'start' button when the applet finishes loading.

Questions and comments should be directed to Rich Carlson (Internet2) at
<RCarlson@internet2.edu>.  

You may also join the NDT discussion list by sending a "subscribe NDT"
email to <majordomo@anl.gov>.  
